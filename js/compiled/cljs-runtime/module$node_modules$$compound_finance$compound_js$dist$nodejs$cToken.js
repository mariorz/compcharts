shadow$provide.module$node_modules$$compound_finance$compound_js$dist$nodejs$cToken=function(global,require,module,exports){var __assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p])}return t};return __assign.apply(this,arguments)},__awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?
value:new P(function(resolve){resolve(value)})}return new (P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})},__generator=this&&this.__generator||function(thisArg,body){function verb(n){return function(v){return step([n,
v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");for(;_;)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=0<t.length&&t[t.length-1])&&(6===op[0]||2===op[0])){_=0;
continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3]))_.label=op[1];else if(6===op[0]&&_.label<t[1])_.label=t[1],t=op;else if(t&&_.label<t[2])_.label=t[2],_.ops.push(op);else{t[2]&&_.ops.pop();_.trys.pop();continue}}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},"function"===typeof Symbol&&
(g[Symbol.iterator]=function(){return this}),g};exports.__esModule=!0;exports.repayBorrow=exports.borrow=exports.redeem=exports.supply=void 0;var ethers_1=require("module$node_modules$ethers$dist$ethers_umd"),eth=require("module$node_modules$$compound_finance$compound_js$dist$nodejs$eth"),helpers_1=require("module$node_modules$$compound_finance$compound_js$dist$nodejs$helpers"),constants_1=require("module$node_modules$$compound_finance$compound_js$dist$nodejs$constants");exports.supply=function(asset,
amount,noApprove,options){void 0===noApprove&&(noApprove=!1);void 0===options&&(options={});return __awaiter(this,void 0,void 0,function(){var cTokenName,cTokenAddress,underlyingAddress,userAddress,allowance,notEnough,parameters;return __generator(this,function(_a){switch(_a.label){case 0:return[4,helpers_1.netId(this)];case 1:_a.sent();cTokenName="c"+asset;cTokenAddress=constants_1.address[this._network.name][cTokenName];if(!cTokenAddress||!constants_1.underlyings.includes(asset))throw Error("Compound [supply] | Argument `asset` cannot be supplied.");
if("number"!==typeof amount&&"string"!==typeof amount&&!ethers_1.ethers.BigNumber.isBigNumber(amount))throw Error("Compound [supply] | Argument `amount` must be a string, number, or BigNumber.");options.mantissa||(amount=+amount,amount*=Math.pow(10,constants_1.decimals[asset]));amount=ethers_1.ethers.BigNumber.from(amount.toString());options.abi=cTokenName===constants_1.constants.cETH?constants_1.abi.cEther:constants_1.abi.cErc20;options._compoundProvider=this._provider;if(cTokenName===constants_1.constants.cETH||
!0===noApprove)return[3,4];underlyingAddress=constants_1.address[this._network.name][asset];userAddress=this._provider.address;return[4,eth.read(underlyingAddress,"allowance",[userAddress,cTokenAddress],options)];case 2:return allowance=_a.sent(),(notEnough=allowance.lt(amount))?[4,eth.trx(underlyingAddress,"approve",[cTokenAddress,amount],options)]:[3,4];case 3:_a.sent(),_a.label=4;case 4:return parameters=[],cTokenName===constants_1.constants.cETH?options.value=amount:parameters.push(amount),[2,
eth.trx(cTokenAddress,"mint",parameters,options)]}})})};exports.redeem=function(asset,amount,options){void 0===options&&(options={});return __awaiter(this,void 0,void 0,function(){var assetIsCToken,cTokenName,cTokenAddress,underlyingName,trxOptions,parameters,method;return __generator(this,function(_a){switch(_a.label){case 0:return[4,helpers_1.netId(this)];case 1:_a.sent();if("string"!==typeof asset||1>asset.length)throw Error("Compound [redeem] | Argument `asset` must be a non-empty string.");cTokenName=
(assetIsCToken="c"===asset[0])?asset:"c"+asset;cTokenAddress=constants_1.address[this._network.name][cTokenName];underlyingName=assetIsCToken?asset.slice(1,asset.length):asset;if(!constants_1.cTokens.includes(cTokenName)||!constants_1.underlyings.includes(underlyingName))throw Error("Compound [redeem] | Argument `asset` is not supported.");if("number"!==typeof amount&&"string"!==typeof amount&&!ethers_1.ethers.BigNumber.isBigNumber(amount))throw Error("Compound [redeem] | Argument `amount` must be a string, number, or BigNumber.");
options.mantissa||(amount=+amount,amount*=Math.pow(10,constants_1.decimals[asset]));amount=ethers_1.ethers.BigNumber.from(amount.toString());trxOptions=__assign(__assign({},options),{_compoundProvider:this._provider,abi:cTokenName===constants_1.constants.cETH?constants_1.abi.cEther:constants_1.abi.cErc20});parameters=[amount];method=assetIsCToken?"redeem":"redeemUnderlying";return[2,eth.trx(cTokenAddress,method,parameters,trxOptions)]}})})};exports.borrow=function(asset,amount,options){void 0===options&&
(options={});return __awaiter(this,void 0,void 0,function(){var cTokenName,cTokenAddress,trxOptions,parameters;return __generator(this,function(_a){switch(_a.label){case 0:return[4,helpers_1.netId(this)];case 1:_a.sent();cTokenName="c"+asset;cTokenAddress=constants_1.address[this._network.name][cTokenName];if(!cTokenAddress||!constants_1.underlyings.includes(asset))throw Error("Compound [borrow] | Argument `asset` cannot be borrowed.");if("number"!==typeof amount&&"string"!==typeof amount&&!ethers_1.ethers.BigNumber.isBigNumber(amount))throw Error("Compound [borrow] | Argument `amount` must be a string, number, or BigNumber.");
options.mantissa||(amount=+amount,amount*=Math.pow(10,constants_1.decimals[asset]));amount=ethers_1.ethers.BigNumber.from(amount.toString());trxOptions=__assign(__assign({},options),{_compoundProvider:this._provider});parameters=[amount];trxOptions.abi=cTokenName===constants_1.constants.cETH?constants_1.abi.cEther:constants_1.abi.cErc20;return[2,eth.trx(cTokenAddress,"borrow",parameters,trxOptions)]}})})};exports.repayBorrow=function(asset,amount,borrower,noApprove,options){void 0===noApprove&&(noApprove=
!1);void 0===options&&(options={});return __awaiter(this,void 0,void 0,function(){var cTokenName,cTokenAddress,method,trxOptions,parameters,underlyingAddress,userAddress,allowance,notEnough;return __generator(this,function(_a){switch(_a.label){case 0:return[4,helpers_1.netId(this)];case 1:_a.sent();cTokenName="c"+asset;cTokenAddress=constants_1.address[this._network.name][cTokenName];if(!cTokenAddress||!constants_1.underlyings.includes(asset))throw Error("Compound [repayBorrow] | Argument `asset` is not supported.");
if("number"!==typeof amount&&"string"!==typeof amount&&!ethers_1.ethers.BigNumber.isBigNumber(amount))throw Error("Compound [repayBorrow] | Argument `amount` must be a string, number, or BigNumber.");method=ethers_1.ethers.utils.isAddress(borrower)?"repayBorrowBehalf":"repayBorrow";if(borrower&&"repayBorrow"===method)throw Error("Compound [repayBorrow] | Invalid `borrower` address.");options.mantissa||(amount=+amount,amount*=Math.pow(10,constants_1.decimals[asset]));amount=ethers_1.ethers.BigNumber.from(amount.toString());
trxOptions=__assign(__assign({},options),{_compoundProvider:this._provider});parameters="repayBorrowBehalf"===method?[borrower]:[];cTokenName===constants_1.constants.cETH?(trxOptions.value=amount,trxOptions.abi=constants_1.abi.cEther):(parameters.push(amount),trxOptions.abi=constants_1.abi.cErc20);if(cTokenName===constants_1.constants.cETH||!0===noApprove)return[3,4];underlyingAddress=constants_1.address[this._network.name][asset];userAddress=this._provider.address;return[4,eth.read(underlyingAddress,
"allowance",[userAddress,cTokenAddress],trxOptions)];case 2:return allowance=_a.sent(),(notEnough=allowance.lt(amount))?[4,eth.trx(underlyingAddress,"approve",[cTokenAddress,amount],trxOptions)]:[3,4];case 3:_a.sent(),_a.label=4;case 4:return[2,eth.trx(cTokenAddress,method,parameters,trxOptions)]}})})}}
//# sourceMappingURL=module$node_modules$$compound_finance$compound_js$dist$nodejs$cToken.js.map
