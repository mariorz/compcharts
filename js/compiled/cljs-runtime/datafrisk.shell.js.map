{"version":3,"sources":["datafrisk/shell.cljs"],"mappings":";AAIA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAOL,AAAA,AAAMC,AAA6BC,AAASC;AAA5C,AAAA,AAAA,AAAA,AAAA,AAAA,AACqBA,AACF,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAQM,AAAA,AAAuBJ,AACvB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAUE,AACjC,AAAA,AAAA,AAAIA;;AAEP,AAAA,AAAA,AAAAG,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAME,AAAoBM,AAAcC;AAAxC,AACE,AAAMhB,AAAS,AAAA,AAAA,AAAAiB,AAAkBF;AAAjC,AAAA,AAAA,AAAA,AAAA,AAAA,AACgB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACb,AAKmB,AAAA,AAAA,AAAIF,AAGjB,AAAA,AAAQF,AAC3BC,AAA4BC,AAAS,AAAKkB;AAAL,AAAQ,AAAA,AAACC,AAAMJ,AAAYK,AAAsB,AAACC,AAAIrB;AAV/F,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAeI,AAACsB,AAAY,AAAKC,AAAGC;AAAR,AAAA,AAAA,AAAA,AAAA,AACSD,AAAKE,AAAUD,AAAED,AAAGR;AAAcC;;;AAjB9D,AAAA,AAAA,AAAMP;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAI,AAAA;AAAA,AAAA,AAAAA,AAAAH,AAAAD;;;AAAA,AAmBA,AAAA,AAAA,AAAAP,AAAMuB;AAAN,AAAA,AAAAtB,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAsB,AAAAnB;;;AAAA,AAAA,AAAA,AAAA,AAAMmB,AAAkBV;AAAxB,AACE,AAAMc,AAAkB,AAAA,AAAAC,AAAAC,AAACC;AAAD,AAAS,AAAAF,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAACE;AAAV,AAAiE,AAACC,AAAM,AAACC,AAAMpB;AACjGD,AAAY,AAACsB,AAAOP;AAD1B,AAEE;AAAOd;AAAP,AACE,AAACsB,AAAM7B,AAAmBM,AAAYC;;;AADjCA;;;;AAAAA;;AAAAA;;;AAAAA;AAAAA;;;;;;;;AAHX,AAAA,AAAA,AAAMU;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAF;;;AAAA","names":["datafrisk.shell/styles","datafrisk.shell/DataFriskShellVisibleButton","visible?","toggle-visible-fn","cljs.core.merge","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","datafrisk.shell/DataFriskShellView","seq39165","G__39166","cljs.core/first","cljs.core/next","self__4723__auto__","shell-state","data","cljs.core/deref","_","cljs.core.swap_BANG_","cljs.core/assoc","cljs.core/not","cljs.core.map_indexed","id","x","datafrisk.view/Root","datafrisk.shell/DataFriskShell","seq39169","self__4724__auto__","cljs.core/seq","expand-by-default","p1__39167#","p2__39168#","cljs.core.reduce","cljs.core/assoc-in","cljs.core.range","cljs.core/count","reagent.core.atom","cljs.core.apply"],"sourcesContent":["(ns datafrisk.shell\n  (:require [datafrisk.view :as view]\n            [reagent.core :as r]))\n\n(def styles\n  {:shell {:backgroundColor \"#FAFAFA\"\n           :fontFamily \"Consolas,Monaco,Courier New,monospace\"\n           :fontSize \"12px\"\n           :z-index 9999}\n   :shell-visible-button {:backgroundColor \"#4EE24E\"}})\n\n(defn DataFriskShellVisibleButton [visible? toggle-visible-fn]\n  [:button {:onClick toggle-visible-fn\n            :style (merge {:border 0\n                           :cursor \"pointer\"\n                           :font \"inherit\"\n                           :padding \"8px 12px\"\n                           :position \"fixed\"\n                           :right 0\n                           :width \"80px\"\n                           :text-align \"center\"}\n                          (:shell-visible-button styles)\n                          (when-not visible? {:bottom 0}))}\n   (if visible? \"Hide\" \"Data frisk\")])\n\n(defn DataFriskShellView [shell-state & data]\n  (let [visible? (:shell-visible? @shell-state)]\n    [:div {:style (merge {:position \"fixed\"\n                          :right 0\n                          :bottom 0\n                          :width \"100%\"\n                          :height \"50%\"\n                          :max-height (if visible? \"50%\" 0)\n                          :transition \"all 0.3s ease-out\"\n                          :padding 0}\n                         (:shell styles))}\n     [DataFriskShellVisibleButton visible? (fn [_] (swap! shell-state assoc :shell-visible? (not visible?)))]\n     [:div {:style {:padding \"10px\"\n                    :height \"100%\"\n                    :box-sizing \"border-box\"\n                    :overflow-y \"scroll\"}}\n      (map-indexed (fn [id x]\n                     ^{:key id} [view/Root x id shell-state]) data)]]))\n\n(defn DataFriskShell [& data]\n  (let [expand-by-default (reduce #(assoc-in %1 [:data-frisk %2 :expanded-paths] #{[]}) {} (range (count data)))\n        shell-state (r/atom expand-by-default)]\n    (fn [& data]\n      (apply DataFriskShellView shell-state data))))\n\n"]}