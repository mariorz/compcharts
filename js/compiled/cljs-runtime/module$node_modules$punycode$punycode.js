shadow$provide.module$node_modules$punycode$punycode=function(global,require,module,exports){function error(type){throw new RangeError(errors[type]);}function mapDomain(string,fn){var parts=string.split("@"),result="";1<parts.length&&(result=parts[0]+"@",string=parts[1]);string=string.replace(regexSeparators,".");string=string.split(".");parts=[];for(var length=string.length;length--;)parts[length]=fn(string[length]);fn=parts.join(".");return result+fn}function ucs2decode(string){for(var output=[],
counter=0,length=string.length;counter<length;){var value=string.charCodeAt(counter++);if(55296<=value&&56319>=value&&counter<length){var extra=string.charCodeAt(counter++);56320==(extra&64512)?output.push(((value&1023)<<10)+(extra&1023)+65536):(output.push(value),counter--)}else output.push(value)}return output}var regexPunycode=/^xn--/,regexNonASCII=/[^\0-\x7E]/,regexSeparators=/[\x2E\u3002\uFF0E\uFF61]/g,errors={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input \x3e\x3d 0x80 (not a basic code point)",
"invalid-input":"Invalid input"},floor=Math.floor,stringFromCharCode=String.fromCharCode,digitToBasic=function(digit,flag){return digit+22+75*(26>digit)-((0!=flag)<<5)},adapt=function(delta,numPoints,firstTime){var k=0;delta=firstTime?floor(delta/700):delta>>1;for(delta+=floor(delta/numPoints);455<delta;k+=36)delta=floor(delta/35);return floor(k+36*delta/(delta+38))},decode=function(input){var output=[],inputLength=input.length,i=0,n=128,bias=72,basic=input.lastIndexOf("-");0>basic&&(basic=0);for(var j=
0;j<basic;++j)128<=input.charCodeAt(j)&&error("not-basic"),output.push(input.charCodeAt(j));for(basic=0<basic?basic+1:0;basic<inputLength;){j=i;for(var w=1,k=36;;k+=36){basic>=inputLength&&error("invalid-input");var codePoint=input.charCodeAt(basic++);codePoint=10>codePoint-48?codePoint-22:26>codePoint-65?codePoint-65:26>codePoint-97?codePoint-97:36;(36<=codePoint||codePoint>floor((2147483647-i)/w))&&error("overflow");i+=codePoint*w;var t=k<=bias?1:k>=bias+26?26:k-bias;if(codePoint<t)break;codePoint=
36-t;w>floor(2147483647/codePoint)&&error("overflow");w*=codePoint}w=output.length+1;bias=adapt(i-j,w,0==j);floor(i/w)>2147483647-n&&error("overflow");n+=floor(i/w);i%=w;output.splice(i++,0,n)}return String.fromCodePoint.apply(String,$jscomp.arrayFromIterable(output))},encode=function(input){var output=[];input=ucs2decode(input);for(var inputLength=input.length,n=128,delta=0,bias=72,$jscomp$iter$2=$jscomp.makeIterator(input),$jscomp$key$currentValue=$jscomp$iter$2.next();!$jscomp$key$currentValue.done;$jscomp$key$currentValue=
$jscomp$iter$2.next()){var currentValue=$jscomp$key$currentValue.value;128>currentValue&&output.push(stringFromCharCode(currentValue))}for((currentValue=$jscomp$iter$2=output.length)&&output.push("-");currentValue<inputLength;){var m=2147483647,$jscomp$iter$3=$jscomp.makeIterator(input);for($jscomp$key$currentValue=$jscomp$iter$3.next();!$jscomp$key$currentValue.done;$jscomp$key$currentValue=$jscomp$iter$3.next())$jscomp$key$currentValue=$jscomp$key$currentValue.value,$jscomp$key$currentValue>=n&&
$jscomp$key$currentValue<m&&(m=$jscomp$key$currentValue);$jscomp$iter$3=currentValue+1;m-n>floor((2147483647-delta)/$jscomp$iter$3)&&error("overflow");delta+=(m-n)*$jscomp$iter$3;n=m;m=$jscomp.makeIterator(input);for($jscomp$key$currentValue=m.next();!$jscomp$key$currentValue.done;$jscomp$key$currentValue=m.next())if($jscomp$key$currentValue=$jscomp$key$currentValue.value,$jscomp$key$currentValue<n&&2147483647<++delta&&error("overflow"),$jscomp$key$currentValue==n){var q=delta;for($jscomp$key$currentValue=
36;;$jscomp$key$currentValue+=36){var t=$jscomp$key$currentValue<=bias?1:$jscomp$key$currentValue>=bias+26?26:$jscomp$key$currentValue-bias;if(q<t)break;q-=t;var baseMinusT=36-t;output.push(stringFromCharCode(digitToBasic(t+q%baseMinusT,0)));q=floor(q/baseMinusT)}output.push(stringFromCharCode(digitToBasic(q,0)));bias=adapt(delta,$jscomp$iter$3,currentValue==$jscomp$iter$2);delta=0;++currentValue}++delta;++n}return output.join("")};module.exports={version:"2.1.0",ucs2:{decode:ucs2decode,encode:function(array){return String.fromCodePoint.apply(String,
$jscomp.arrayFromIterable(array))}},decode:decode,encode:encode,toASCII:function(input){return mapDomain(input,function(string){return regexNonASCII.test(string)?"xn--"+encode(string):string})},toUnicode:function(input){return mapDomain(input,function(string){return regexPunycode.test(string)?decode(string.slice(4).toLowerCase()):string})}}}
//# sourceMappingURL=module$node_modules$punycode$punycode.js.map
