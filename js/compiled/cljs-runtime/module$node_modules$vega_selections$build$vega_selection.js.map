{
"version":3,
"file":"module$node_modules$vega_selections$build$vega_selection.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/vega-selections/build/vega-selection.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_selections$build$vega_selection\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('vega-expression')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'vega-expression'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}, global.vega, global.vega));\n}(this, (function (exports, vegaUtil, vegaExpression) { 'use strict';\n\n  const Intersect = 'intersect';\n  const Union = 'union';\n  const VlMulti = 'vlMulti';\n  const Or = 'or';\n  const And = 'and';\n\n  var TYPE_ENUM = 'E',\n      TYPE_RANGE_INC = 'R',\n      TYPE_RANGE_EXC = 'R-E',\n      TYPE_RANGE_LE = 'R-LE',\n      TYPE_RANGE_RE = 'R-RE',\n      UNIT_INDEX = 'index:unit'; // TODO: revisit date coercion?\n\n  function testPoint(datum, entry) {\n    var fields = entry.fields,\n        values = entry.values,\n        n = fields.length,\n        i = 0,\n        dval,\n        f;\n\n    for (; i < n; ++i) {\n      f = fields[i];\n      f.getter = vegaUtil.field.getter || vegaUtil.field(f.field);\n      dval = f.getter(datum);\n      if (vegaUtil.isDate(dval)) dval = vegaUtil.toNumber(dval);\n      if (vegaUtil.isDate(values[i])) values[i] = vegaUtil.toNumber(values[i]);\n      if (vegaUtil.isDate(values[i][0])) values[i] = values[i].map(vegaUtil.toNumber);\n\n      if (f.type === TYPE_ENUM) {\n        // Enumerated fields can either specify individual values (single/multi selections)\n        // or an array of values (interval selections).\n        if (vegaUtil.isArray(values[i]) ? values[i].indexOf(dval) < 0 : dval !== values[i]) {\n          return false;\n        }\n      } else {\n        if (f.type === TYPE_RANGE_INC) {\n          if (!vegaUtil.inrange(dval, values[i])) return false;\n        } else if (f.type === TYPE_RANGE_RE) {\n          // Discrete selection of bins test within the range [bin_start, bin_end).\n          if (!vegaUtil.inrange(dval, values[i], true, false)) return false;\n        } else if (f.type === TYPE_RANGE_EXC) {\n          // 'R-E'/'R-LE' included for completeness.\n          if (!vegaUtil.inrange(dval, values[i], false, false)) return false;\n        } else if (f.type === TYPE_RANGE_LE) {\n          if (!vegaUtil.inrange(dval, values[i], false, true)) return false;\n        }\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Tests if a tuple is contained within an interactive selection.\n   * @param {string} name - The name of the data set representing the selection.\n   *  Tuples in the dataset are of the form\n   *  {unit: string, fields: array<fielddef>, values: array<*>}.\n   *  Fielddef is of the form\n   *  {field: string, channel: string, type: 'E' | 'R'} where\n   *  'type' identifies whether tuples in the dataset enumerate\n   *  values for the field, or specify a continuous range.\n   * @param {object} datum - The tuple to test for inclusion.\n   * @param {string} op - The set operation for combining selections.\n   *   One of 'intersect' or 'union' (default).\n   * @return {boolean} - True if the datum is in the selection, false otherwise.\n   */\n\n\n  function selectionTest(name, datum, op) {\n    var data = this.context.data[name],\n        entries = data ? data.values.value : [],\n        unitIdx = data ? data[UNIT_INDEX] && data[UNIT_INDEX].value : undefined,\n        intersect = op === Intersect,\n        n = entries.length,\n        i = 0,\n        entry,\n        miss,\n        count,\n        unit,\n        b;\n\n    for (; i < n; ++i) {\n      entry = entries[i];\n\n      if (unitIdx && intersect) {\n        // multi selections union within the same unit and intersect across units.\n        miss = miss || {};\n        count = miss[unit = entry.unit] || 0; // if we've already matched this unit, skip.\n\n        if (count === -1) continue;\n        b = testPoint(datum, entry);\n        miss[unit] = b ? -1 : ++count; // if we match and there are no other units return true\n        // if we've missed against all tuples in this unit return false\n\n        if (b && unitIdx.size === 1) return true;\n        if (!b && count === unitIdx.get(unit).count) return false;\n      } else {\n        b = testPoint(datum, entry); // if we find a miss and we do require intersection return false\n        // if we find a match and we don't require intersection return true\n\n        if (intersect ^ b) return b;\n      }\n    } // if intersecting and we made it here, then we saw no misses\n    // if not intersecting, then we saw no matches\n    // if no active selections, return false\n\n\n    return n && intersect;\n  }\n\n  /**\n   * Resolves selection for use as a scale domain or reads via the API.\n   * @param {string} name - The name of the dataset representing the selection\n   * @param {string} [op='union'] - The set operation for combining selections.\n   *                 One of 'intersect' or 'union' (default).\n   * @returns {object} An object of selected fields and values.\n   */\n\n  function selectionResolve(name, op, isMulti) {\n    var data = this.context.data[name],\n        entries = data ? data.values.value : [],\n        resolved = {},\n        multiRes = {},\n        types = {},\n        entry,\n        fields,\n        values,\n        unit,\n        field,\n        res,\n        resUnit,\n        type,\n        union,\n        n = entries.length,\n        i = 0,\n        j,\n        m; // First union all entries within the same unit.\n\n    for (; i < n; ++i) {\n      entry = entries[i];\n      unit = entry.unit;\n      fields = entry.fields;\n      values = entry.values;\n\n      for (j = 0, m = fields.length; j < m; ++j) {\n        field = fields[j];\n        res = resolved[field.field] || (resolved[field.field] = {});\n        resUnit = res[unit] || (res[unit] = []);\n        types[field.field] = type = field.type.charAt(0);\n        union = ops[type + '_union'];\n        res[unit] = union(resUnit, vegaUtil.array(values[j]));\n      } // If the same multi-selection is repeated over views and projected over\n      // an encoding, it may operate over different fields making it especially\n      // tricky to reliably resolve it. At best, we can de-dupe identical entries\n      // but doing so may be more computationally expensive than it is worth.\n      // Instead, for now, we simply transform our store representation into\n      // a more human-friendly one.\n\n\n      if (isMulti) {\n        resUnit = multiRes[unit] || (multiRes[unit] = []);\n        resUnit.push(vegaUtil.array(values).reduce((obj, curr, j) => (obj[fields[j].field] = curr, obj), {}));\n      }\n    } // Then resolve fields across units as per the op.\n\n\n    op = op || Union;\n    Object.keys(resolved).forEach(field => {\n      resolved[field] = Object.keys(resolved[field]).map(unit => resolved[field][unit]).reduce((acc, curr) => acc === undefined ? curr : ops[types[field] + '_' + op](acc, curr));\n    });\n    entries = Object.keys(multiRes);\n\n    if (isMulti && entries.length) {\n      resolved[VlMulti] = op === Union ? {\n        [Or]: entries.reduce((acc, k) => (acc.push(...multiRes[k]), acc), [])\n      } : {\n        [And]: entries.map(k => ({\n          [Or]: multiRes[k]\n        }))\n      };\n    }\n\n    return resolved;\n  }\n  var ops = {\n    E_union: function (base, value) {\n      if (!base.length) return value;\n      var i = 0,\n          n = value.length;\n\n      for (; i < n; ++i) if (base.indexOf(value[i]) < 0) base.push(value[i]);\n\n      return base;\n    },\n    E_intersect: function (base, value) {\n      return !base.length ? value : base.filter(v => value.indexOf(v) >= 0);\n    },\n    R_union: function (base, value) {\n      var lo = vegaUtil.toNumber(value[0]),\n          hi = vegaUtil.toNumber(value[1]);\n\n      if (lo > hi) {\n        lo = value[1];\n        hi = value[0];\n      }\n\n      if (!base.length) return [lo, hi];\n      if (base[0] > lo) base[0] = lo;\n      if (base[1] < hi) base[1] = hi;\n      return base;\n    },\n    R_intersect: function (base, value) {\n      var lo = vegaUtil.toNumber(value[0]),\n          hi = vegaUtil.toNumber(value[1]);\n\n      if (lo > hi) {\n        lo = value[1];\n        hi = value[0];\n      }\n\n      if (!base.length) return [lo, hi];\n\n      if (hi < base[0] || base[1] < lo) {\n        return [];\n      } else {\n        if (base[0] < lo) base[0] = lo;\n        if (base[1] > hi) base[1] = hi;\n      }\n\n      return base;\n    }\n  };\n\n  const DataPrefix = ':',\n        IndexPrefix = '@';\n  function selectionVisitor(name, args, scope, params) {\n    if (args[0].type !== vegaExpression.Literal) vegaUtil.error('First argument to selection functions must be a string literal.');\n    const data = args[0].value,\n          op = args.length >= 2 && vegaUtil.peek(args).value,\n          field = 'unit',\n          indexName = IndexPrefix + field,\n          dataName = DataPrefix + data; // eslint-disable-next-line no-prototype-builtins\n\n    if (op === Intersect && !vegaUtil.hasOwnProperty(params, indexName)) {\n      params[indexName] = scope.getData(data).indataRef(scope, field);\n    } // eslint-disable-next-line no-prototype-builtins\n\n\n    if (!vegaUtil.hasOwnProperty(params, dataName)) {\n      params[dataName] = scope.getData(data).tuplesRef();\n    }\n  }\n\n  exports.selectionResolve = selectionResolve;\n  exports.selectionTest = selectionTest;\n  exports.selectionVisitor = selectionVisitor;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","vegaUtil","vegaExpression","testPoint","datum","entry","fields","values","n","length","i","dval","f","getter","field","isDate","toNumber","map","TYPE_ENUM","type","isArray","indexOf","TYPE_RANGE_INC","inrange","TYPE_RANGE_RE","TYPE_RANGE_EXC","TYPE_RANGE_LE","ops","E_union","base","value","push","E_intersect","filter","v","R_union","lo","hi","R_intersect","selectionResolve","name","op","isMulti","entries","data","context","resolved","multiRes","types","unit","res","resUnit","j","m","charAt","union","array","reduce","obj","curr","Union","Object","keys","forEach","acc","undefined","VlMulti","Or","k","And","selectionTest","unitIdx","UNIT_INDEX","intersect","Intersect","miss","count","b","size","get","selectionVisitor","args","scope","params","Literal","error","peek","dataName","DataPrefix","hasOwnProperty","indexName","getData","indataRef","tuplesRef","defineProperty"]
}
