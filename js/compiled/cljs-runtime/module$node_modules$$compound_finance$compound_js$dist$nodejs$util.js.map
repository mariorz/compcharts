{
"version":3,
"file":"module$node_modules$$compound_finance$compound_js$dist$nodejs$util.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@compound-finance/compound-js/dist/nodejs/util.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$compound_finance$compound_js$dist$nodejs$util\"] = function(global,require,module,exports) {\n\"use strict\";\n/**\n * @file Utility\n * @desc These methods are helpers for the Compound class.\n */\nexports.__esModule = true;\nexports.getNetNameWithChainId = exports.getAbi = exports.getAddress = exports.request = void 0;\nvar constants_1 = require(\"./constants\");\n/* eslint-disable */\nvar _request;\nvar http;\nvar https;\nfunction _nodeJsRequest(options) {\n    return new Promise(function (resolve, reject) {\n        var url = options.url || options.hostname;\n        // Use 'https' if the protocol is not specified in 'options.hostname'\n        if (url.indexOf(\"http://\") !== 0 &&\n            url.indexOf(\"https://\") !== 0) {\n            url = \"https://\" + url;\n        }\n        // Choose the right module based on the protocol in 'options.hostname'\n        var httpOrHttps = url.indexOf(\"http://\") === 0 ? http : https;\n        // Remove the 'http://' so the native node.js module will understand\n        options.hostname = url.split('://')[1];\n        var body = '';\n        var req = httpOrHttps.request(options, function (res) {\n            res.on(\"data\", function (bodyBuffer) {\n                body += bodyBuffer.toString();\n            });\n            res.on(\"end\", function () {\n                resolve({\n                    status: res.statusCode,\n                    statusText: res.statusMessage,\n                    body: body\n                });\n            });\n        });\n        req.on('timeout', function () {\n            req.abort();\n            return reject({\n                status: 408,\n                statusText: 'Client HTTP request timeout limit reached.'\n            });\n        });\n        req.on('error', function (err) {\n            if (req.aborted)\n                return;\n            if (err !== null && err.toString() === '[object Object]') {\n                console.error(JSON.stringify(err));\n            }\n            else {\n                console.error(err);\n            }\n            return reject();\n        });\n        if (options.body) {\n            req.write(JSON.stringify(options.body));\n        }\n        req.end();\n    });\n}\nfunction _webBrowserRequest(options) {\n    return new Promise(function (resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        var contentTypeIsSet = false;\n        options = options || {};\n        var method = options.method || \"GET\";\n        var url = options.url || options.hostname;\n        url += typeof options.path === \"string\" ? options.path : \"\";\n        if (typeof url !== \"string\") {\n            return reject(\"HTTP Request: Invalid URL.\");\n        }\n        // Use 'https' if the protocol is not specified in 'options.hostname'\n        if (url.indexOf(\"http://\") !== 0 &&\n            url.indexOf(\"https://\") !== 0) {\n            url = \"https://\" + url;\n        }\n        xhr.open(method, url);\n        for (var header in options.headers) {\n            if ({}.hasOwnProperty.call(options.headers, header)) {\n                var lcHeader = header.toLowerCase();\n                contentTypeIsSet = lcHeader === \"content-type\" ? true : contentTypeIsSet;\n                xhr.setRequestHeader(header, options.headers[header]);\n            }\n        }\n        if (!contentTypeIsSet) {\n            xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        xhr.onload = function () {\n            var body;\n            if (xhr.status >= 100 && xhr.status < 400) {\n                try {\n                    JSON.parse(xhr.response);\n                    body = xhr.response;\n                }\n                catch (e) {\n                    body = xhr.statusText;\n                }\n                return resolve({\n                    status: xhr.status,\n                    statusText: xhr.statusText,\n                    body: body\n                });\n            }\n            else {\n                return reject({\n                    status: xhr.status,\n                    statusText: xhr.statusText\n                });\n            }\n        };\n        if (method !== \"GET\") {\n            xhr.send(JSON.stringify(options.body));\n        }\n        else {\n            xhr.send();\n        }\n    });\n}\ntry {\n    window;\n    _request = _webBrowserRequest;\n}\ncatch (e) {\n    http = require('http');\n    https = require('https');\n    _request = _nodeJsRequest;\n}\n/**\n * A generic HTTP request method that works in Node.js and the Web Browser.\n *\n * @param {object} options HTTP request options. See Node.js http.request\n *     documentation for details.\n *\n * @hidden\n *\n * @returns {Promise<object>} Returns a promise and eventually an HTTP response\n *     (JavaScript object).\n */\nfunction request(options) {\n    return _request.apply(null, [options]);\n}\nexports.request = request;\n/* eslint-enable */\n/**\n * Gets the contract address of the named contract. This method supports\n *     contracts used by the Compound Protocol.\n *\n * @param {string} contract The name of the contract.\n * @param {string} [network] Optional name of the Ethereum network. Main net and\n *     all the popular public test nets are supported.\n *\n * @returns {string} Returns the address of the contract.\n *\n * @example\n * ```\n * console.log('cETH Address: ', Compound.util.getAddress(Compound.cETH));\n * ```\n */\nfunction getAddress(contract, network) {\n    if (network === void 0) { network = 'mainnet'; }\n    return constants_1.address[network][contract];\n}\nexports.getAddress = getAddress;\n/**\n * Gets a contract ABI as a JavaScript array. This method supports\n *     contracts used by the Compound Protocol.\n *\n * @param {string} contract The name of the contract.\n *\n * @returns {Array} Returns the ABI of the contract as a JavaScript array.\n *\n * @example\n * ```\n * console.log('cETH ABI: ', Compound.util.getAbi(Compound.cETH));\n * ```\n */\nfunction getAbi(contract) {\n    return constants_1.abi[contract];\n}\nexports.getAbi = getAbi;\n/**\n * Gets the name of an Ethereum network based on its chain ID.\n *\n * @param {string} chainId The chain ID of the network.\n *\n * @returns {string} Returns the name of the Ethereum network.\n *\n * @example\n * ```\n * console.log('Ropsten : ', Compound.util.getNetNameWithChainId(3));\n * ```\n */\nfunction getNetNameWithChainId(chainId) {\n    var networks = {\n        1: 'mainnet',\n        3: 'ropsten',\n        4: 'rinkeby',\n        5: 'goerli',\n        42: 'kovan'\n    };\n    return networks[chainId];\n}\nexports.getNetNameWithChainId = getNetNameWithChainId;\n//# sourceMappingURL=util.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_nodeJsRequest","options","Promise","resolve","reject","url","hostname","indexOf","httpOrHttps","http","https","split","body","req","request","res","on","bodyBuffer","toString","status","statusCode","statusText","statusMessage","abort","err","aborted","console","error","JSON","stringify","write","end","_webBrowserRequest","xhr","XMLHttpRequest","contentTypeIsSet","method","path","open","header","headers","hasOwnProperty","call","lcHeader","toLowerCase","setRequestHeader","onload","xhr.onload","parse","response","e","send","__esModule","getNetNameWithChainId","getAbi","getAddress","constants_1","window","_request","apply","contract","network","address","abi","chainId","networks"]
}
