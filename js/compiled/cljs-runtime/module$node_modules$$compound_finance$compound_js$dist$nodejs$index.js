shadow$provide.module$node_modules$$compound_finance$compound_js$dist$nodejs$index=function(global,require,module,exports){var __assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p])}return t};return __assign.apply(this,arguments)};global=require("module$node_modules$ethers$dist$ethers_umd");var eth=require("module$node_modules$$compound_finance$compound_js$dist$nodejs$eth");
exports=require("module$node_modules$$compound_finance$compound_js$dist$nodejs$util");var comptroller=require("module$node_modules$$compound_finance$compound_js$dist$nodejs$comptroller"),cToken=require("module$node_modules$$compound_finance$compound_js$dist$nodejs$cToken"),priceFeed=require("module$node_modules$$compound_finance$compound_js$dist$nodejs$priceFeed"),comp=require("module$node_modules$$compound_finance$compound_js$dist$nodejs$comp"),gov=require("module$node_modules$$compound_finance$compound_js$dist$nodejs$gov"),
api=require("module$node_modules$$compound_finance$compound_js$dist$nodejs$api");require=require("module$node_modules$$compound_finance$compound_js$dist$nodejs$constants");global.ethers.utils.Logger.setLogLevel(global.ethers.utils.Logger.levels.ERROR);var Compound=function(provider,options){void 0===provider&&(provider="mainnet");void 0===options&&(options={});var originalProvider=provider;options.provider=provider||options.provider;provider=eth._createProvider(options);var instance=__assign(__assign(__assign(__assign(__assign({_originalProvider:originalProvider,
_provider:provider},comptroller),cToken),priceFeed),gov),{claimComp:comp.claimComp,delegate:comp.delegate,delegateBySig:comp.delegateBySig,createDelegateSignature:comp.createDelegateSignature});instance._networkPromise=eth.getProviderNetwork(provider).then(function(network){delete instance._networkPromise;instance._network=network});return instance};Compound.eth=eth;Compound.api=api;Compound.util=exports;Compound._ethers=global.ethers;Compound.decimals=require.decimals;Compound.comp={getCompBalance:comp.getCompBalance,
getCompAccrued:comp.getCompAccrued};Object.assign(Compound,require.constants);module.exports=Compound}
//# sourceMappingURL=module$node_modules$$compound_finance$compound_js$dist$nodejs$index.js.map
