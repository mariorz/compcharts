{
"version":3,
"file":"module$node_modules$$compound_finance$compound_js$dist$nodejs$eth.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/@compound-finance/compound-js/dist/nodejs/eth.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$compound_finance$compound_js$dist$nodejs$eth\"] = function(global,require,module,exports) {\n\"use strict\";\n/**\n * @file Ethereum\n * @desc These methods facilitate interactions with the Ethereum blockchain.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nexports.__esModule = true;\nexports._createProvider = exports.getBalance = exports.getProviderNetwork = exports.trx = exports.read = void 0;\nvar ethers_1 = require(\"ethers\");\nvar JsonRpc;\n(function (JsonRpc) {\n    JsonRpc[JsonRpc[\"EthSendTransaction\"] = 0] = \"EthSendTransaction\";\n    JsonRpc[JsonRpc[\"EthCall\"] = 1] = \"EthCall\";\n    // NetVersion,\n})(JsonRpc || (JsonRpc = {}));\n/**\n * This is a generic method for invoking JSON RPC's `eth_call` or `eth_send`\n *     with Ethers.js. This function supports the public `read` and `trx`\n *     methods in this module.\n *\n * @param {boolean} isWrite True for `eth_send` and false for `eth_call`.\n * @param {string} address The Ethereum address the transaction is directed to.\n * @param {string} method The smart contract member in which to invoke.\n * @param {any[]} [parameters] Parameters of the method to invoke.\n * @param {CallOptions} [options] Options to set for `eth_call`, optional ABI\n *     (as JSON object), and Ethers.js method overrides. The ABI can be a string\n *     of the single intended method, an array of many methods, or a JSON object\n *     of the ABI generated by a Solidity compiler.\n *\n * @hidden\n *\n * @returns {Promise<any>} Return value of the invoked smart contract member\n *     or an error object if the call failed.\n */\nfunction _ethJsonRpc(jsonRpcMethod, address, method, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nparameters, options\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    if (parameters === void 0) { parameters = []; }\n    if (options === void 0) { options = {}; }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return new Promise(function (resolve, reject) {\n        var provider = options._compoundProvider || _createProvider(options);\n        var overrides = {\n            gasPrice: options.gasPrice,\n            nonce: options.nonce,\n            value: options.value,\n            chainId: options.chainId,\n            from: options.from,\n            gasLimit: options.gasLimit\n        };\n        parameters.push(overrides);\n        var contract;\n        var abi;\n        if (options.abi) {\n            // Assumes `method` is a string of the member name\n            // Assumes `abi` is a JSON object\n            abi = options.abi;\n            contract = new ethers_1.ethers.Contract(address, abi, provider);\n        }\n        else {\n            // Assumes `method` is a string of the member definition\n            abi = [method];\n            contract = new ethers_1.ethers.Contract(address, abi, provider);\n            method = Object.keys(contract.functions)[1];\n        }\n        if (jsonRpcMethod === JsonRpc.EthSendTransaction) {\n            contract[method].apply(null, parameters).then(function (result) {\n                resolve(result);\n            })[\"catch\"](function (error) {\n                try {\n                    delete parameters[parameters.length - 1].privateKey;\n                }\n                catch (e) { }\n                try {\n                    delete parameters[parameters.length - 1].mnemonic;\n                }\n                catch (e) { }\n                reject({\n                    message: 'Error occurred during [eth_sendTransaction]. See {error}.',\n                    error: error,\n                    method: method,\n                    parameters: parameters\n                });\n            });\n        }\n        else if (jsonRpcMethod === JsonRpc.EthCall) {\n            contract.callStatic[method].apply(null, parameters).then(function (result) {\n                resolve(result);\n            })[\"catch\"](function (error) {\n                try {\n                    delete parameters[parameters.length - 1].privateKey;\n                }\n                catch (e) { }\n                try {\n                    delete parameters[parameters.length - 1].mnemonic;\n                }\n                catch (e) { }\n                reject({\n                    message: 'Error occurred during [eth_call]. See {error}.',\n                    error: error,\n                    method: method,\n                    parameters: parameters\n                });\n            });\n        }\n    });\n}\n/**\n * This is a generic method for invoking JSON RPC's `eth_call` with Ethers.js.\n *     Use this method to execute a smart contract's constant or non-constant\n *     member without using gas. This is a read-only method intended to read a\n *     value or test a transaction for valid parameters. It does not create a\n *     transaction on the block chain.\n *\n * @param {string} address The Ethereum address the transaction is directed to.\n * @param {string} method The smart contract member in which to invoke.\n * @param {any[]} [parameters] Parameters of the method to invoke.\n * @param {CallOptions} [options] Options to set for `eth_call`, optional ABI\n *     (as JSON object), and Ethers.js method overrides. The ABI can be a string\n *     of the single intended method, an array of many methods, or a JSON object\n *     of the ABI generated by a Solidity compiler.\n *\n * @returns {Promise<any>} Return value of the invoked smart contract member or an error\n *     object if the call failed.\n *\n * @example\n * ```\n * const cEthAddress = Compound.util.getAddress(Compound.cETH);\n *\n * (async function() {\n *\n *   const srpb = await Compound.eth.read(\n *     cEthAddress,\n *     'function supplyRatePerBlock() returns (uint256)',\n *     // [], // [optional] parameters\n *     // {}  // [optional] call options, provider, network, plus Ethers.js \"overrides\"\n *   );\n *\n *   console.log('cETH market supply rate per block:', srpb.toString());\n *\n * })().catch(console.error);\n * ```\n */\nfunction read(address, method, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nparameters, options\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    if (parameters === void 0) { parameters = []; }\n    if (options === void 0) { options = {}; }\n    return _ethJsonRpc(JsonRpc.EthCall, address, method, parameters, options);\n}\nexports.read = read;\n/**\n * This is a generic method for invoking JSON RPC's `eth_sendTransaction` with\n *     Ethers.js. Use this method to create a transaction that invokes a smart\n *     contract method. Returns an Ethers.js `TransactionResponse` object.\n *\n * @param {string} address The Ethereum address the transaction is directed to.\n * @param {string} method The smart contract member in which to invoke.\n * @param {any[]} [parameters] Parameters of the method to invoke.\n * @param {CallOptions} [options] Options to set for `eth_sendTransaction`,\n *     (as JSON object), and Ethers.js method overrides. The ABI can be a string\n *     optional ABI of the single intended method, an array of many methods, or\n *     a JSON object of the ABI generated by a Solidity compiler.\n *\n * @returns {Promise<any>} Returns an Ethers.js `TransactionResponse` object or an error\n *     object if the transaction failed.\n *\n * @example\n * ```\n * const oneEthInWei = '1000000000000000000';\n * const cEthAddress = '0x4ddc2d193948926d02f9b1fe9e1daa0718270ed5';\n * const provider = window.ethereum;\n *\n * (async function() {\n *   console.log('Supplying ETH to the Compound Protocol...');\n *\n *   // Mint some cETH by supplying ETH to the Compound Protocol\n *   const trx = await Compound.eth.trx(\n *     cEthAddress,\n *     'function mint() payable',\n *     [],\n *     {\n *       provider,\n *       value: oneEthInWei\n *     }\n *   );\n *\n *   // const result = await trx.wait(1); // JSON object of trx info, once mined\n *\n *   console.log('Ethers.js transaction object', trx);\n * })().catch(console.error);\n * ```\n */\nfunction trx(address, method, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nparameters, options\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    if (parameters === void 0) { parameters = []; }\n    if (options === void 0) { options = {}; }\n    return _ethJsonRpc(JsonRpc.EthSendTransaction, address, method, parameters, options);\n}\nexports.trx = trx;\n/**\n * This helps the Compound.js constructor discover which Ethereum network the\n *     developer wants to use.\n *\n * @param {Provider | string} [provider] Optional Ethereum network provider.\n *     Defaults to Ethers.js fallback mainnet provider.\n *\n * @hidden\n *\n * @returns {object} Returns a metadata object containing the Ethereum network\n *     name and ID.\n */\nfunction getProviderNetwork(provider) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _provider, networkId, network;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (provider._isSigner) {\n                        _provider = provider.provider;\n                    }\n                    else {\n                        _provider = provider;\n                    }\n                    if (!_provider.send) return [3 /*break*/, 2];\n                    return [4 /*yield*/, _provider.send('net_version')];\n                case 1:\n                    networkId = _a.sent();\n                    return [3 /*break*/, 3];\n                case 2:\n                    networkId = _provider._network.chainId;\n                    _a.label = 3;\n                case 3:\n                    networkId = isNaN(networkId) ? 0 : +networkId;\n                    network = ethers_1.ethers.providers.getNetwork(networkId) || { name: 'unknown' };\n                    return [2 /*return*/, {\n                            id: networkId,\n                            name: network.name === 'homestead' ? 'mainnet' : network.name\n                        }];\n            }\n        });\n    });\n}\nexports.getProviderNetwork = getProviderNetwork;\n/**\n * Fetches the current Ether balance of a provided Ethereum address.\n *\n * @param {string} address The Ethereum address in which to get the ETH balance.\n * @param {Provider | string} [provider] Optional Ethereum network provider.\n *     Defaults to Ethers.js fallback mainnet provider.\n *\n * @returns {BigNumber} Returns a BigNumber hexadecimal value of the ETH balance\n *     of the address.\n *\n * @example\n * ```\n * (async function () {\n *\n *   balance = await Compound.eth.getBalance(myAddress, provider);\n *   console.log('My ETH Balance', +balance);\n *\n * })().catch(console.error);\n * ```\n */\nfunction getBalance(address, provider) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _provider, providerInstance, url, balance;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (typeof provider === 'object' && provider._isSigner) {\n                        _provider = provider.provider;\n                    }\n                    else {\n                        _provider = provider;\n                    }\n                    providerInstance = _createProvider({ provider: _provider });\n                    if (!providerInstance.send && providerInstance.providerConfigs) {\n                        url = providerInstance.providerConfigs[0].provider.connection.url;\n                        providerInstance = new ethers_1.ethers.providers.JsonRpcProvider(url);\n                    }\n                    else if (!providerInstance.send && providerInstance.provider) {\n                        providerInstance = providerInstance.provider;\n                    }\n                    return [4 /*yield*/, providerInstance.send('eth_getBalance', [address, 'latest'])];\n                case 1:\n                    balance = _a.sent();\n                    return [2 /*return*/, balance];\n            }\n        });\n    });\n}\nexports.getBalance = getBalance;\n/**\n * Creates an Ethereum network provider object.\n *\n * @param {CallOptions} options The call options of a pending Ethereum\n *     transaction.\n *\n * @hidden\n *\n * @returns {object} Returns a valid Ethereum network provider object.\n */\nfunction _createProvider(options) {\n    if (options === void 0) { options = {}; }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var provider = options.provider || (options.network || 'mainnet');\n    var isADefaultProvider = !!ethers_1.ethers.providers.getNetwork(provider.toString());\n    // Create an ethers provider, web3's can sign\n    if (isADefaultProvider) {\n        provider = ethers_1.ethers.getDefaultProvider(provider);\n    }\n    else if (typeof provider === 'object') {\n        provider = new ethers_1.ethers.providers.Web3Provider(provider).getSigner();\n    }\n    else {\n        provider = new ethers_1.ethers.providers.JsonRpcProvider(provider);\n    }\n    // Add an explicit signer\n    if (options.privateKey) {\n        provider = new ethers_1.ethers.Wallet(options.privateKey, provider);\n    }\n    else if (options.mnemonic) {\n        provider = new ethers_1.ethers.Wallet(ethers_1.ethers.Wallet.fromMnemonic(options.mnemonic), provider);\n    }\n    return provider;\n}\nexports._createProvider = _createProvider;\n//# sourceMappingURL=eth.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_ethJsonRpc","jsonRpcMethod","address","method","parameters","options","Promise","resolve","reject","provider","_compoundProvider","_createProvider","push","overrides","gasPrice","nonce","value","chainId","from","gasLimit","abi","contract","ethers_1","ethers","Contract","Object","keys","functions","JsonRpc","EthSendTransaction","apply","then","result","error","length","privateKey","e","mnemonic","message","EthCall","callStatic","network","isADefaultProvider","providers","getNetwork","toString","getDefaultProvider","Web3Provider","getSigner","JsonRpcProvider","Wallet","fromMnemonic","__awaiter","thisArg","_arguments","P","generator","adopt","fulfilled","step","next","rejected","done","__generator","body","verb","n","v","op","f","TypeError","_","y","t","call","label","ops","pop","trys","sent","g","Symbol","iterator","__esModule","getBalance","getProviderNetwork","trx","read","_provider","networkId","_a","_isSigner","send","_network","isNaN","name","id","providerInstance","url","balance","providerConfigs","connection"]
}
