{
"version":3,
"file":"module$node_modules$$compound_finance$compound_js$dist$nodejs$index.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@compound-finance/compound-js/dist/nodejs/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$compound_finance$compound_js$dist$nodejs$index\"] = function(global,require,module,exports) {\n\"use strict\";\n/**\n * @file Compound\n * @desc This file defines the constructor of the `Compound` class.\n * @hidden\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar ethers_1 = require(\"ethers\");\nvar eth = require(\"./eth\");\nvar util = require(\"./util\");\nvar comptroller = require(\"./comptroller\");\nvar cToken = require(\"./cToken\");\nvar priceFeed = require(\"./priceFeed\");\nvar comp = require(\"./comp\");\nvar gov = require(\"./gov\");\nvar api = require(\"./api\");\nvar constants_1 = require(\"./constants\");\n// Turn off Ethers.js warnings\nethers_1.ethers.utils.Logger.setLogLevel(ethers_1.ethers.utils.Logger.levels.ERROR);\n/**\n * Creates an instance of the Compound.js SDK.\n *\n * @param {Provider | string} [provider] Optional Ethereum network provider.\n *     Defaults to Ethers.js fallback mainnet provider.\n * @param {object} [options] Optional provider options.\n *\n * @example\n * ```\n * var compound = new Compound(window.ethereum); // web browser\n *\n * var compound = new Compound('http://127.0.0.1:8545'); // HTTP provider\n *\n * var compound = new Compound(); // Uses Ethers.js fallback mainnet (for testing only)\n *\n * var compound = new Compound('ropsten'); // Uses Ethers.js fallback (for testing only)\n *\n * // Init with private key (server side)\n * var compound = new Compound('https://mainnet.infura.io/v3/_your_project_id_', {\n *   privateKey: '0x_your_private_key_', // preferably with environment variable\n * });\n *\n * // Init with HD mnemonic (server side)\n * var compound = new Compound('mainnet' {\n *   mnemonic: 'clutch captain shoe...', // preferably with environment variable\n * });\n * ```\n *\n * @returns {object} Returns an instance of the Compound.js SDK.\n */\nvar Compound = function (provider, options) {\n    if (provider === void 0) { provider = 'mainnet'; }\n    if (options === void 0) { options = {}; }\n    var originalProvider = provider;\n    options.provider = provider || options.provider;\n    provider = eth._createProvider(options);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var instance = __assign(__assign(__assign(__assign(__assign({ _originalProvider: originalProvider, _provider: provider }, comptroller), cToken), priceFeed), gov), { claimComp: comp.claimComp, delegate: comp.delegate, delegateBySig: comp.delegateBySig, createDelegateSignature: comp.createDelegateSignature });\n    // Instance needs to know which network the provider connects to, so it can\n    //     use the correct contract addresses.\n    instance._networkPromise = eth.getProviderNetwork(provider).then(function (network) {\n        delete instance._networkPromise;\n        instance._network = network;\n    });\n    return instance;\n};\nCompound.eth = eth;\nCompound.api = api;\nCompound.util = util;\nCompound._ethers = ethers_1.ethers;\nCompound.decimals = constants_1.decimals;\nCompound.comp = {\n    getCompBalance: comp.getCompBalance,\n    getCompAccrued: comp.getCompAccrued\n};\nObject.assign(Compound, constants_1.constants);\nmodule.exports = Compound;\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","ethers_1","eth","util","comptroller","cToken","priceFeed","comp","gov","api","constants_1","ethers","utils","Logger","setLogLevel","levels","ERROR","Compound","provider","options","originalProvider","_createProvider","instance","_originalProvider","_provider","claimComp","delegate","delegateBySig","createDelegateSignature","_networkPromise","getProviderNetwork","then","network","_network","_ethers","decimals","getCompBalance","getCompAccrued","constants"]
}
